{"name":"Debbie Discovers Github","tagline":"Github Geek turns into Website Chic!","body":"# Welcome to Debbie Discovers GitHub Page\r\n\r\nThis beautiful page is generated by Github for Github projects, using Markdown. \r\n\r\n## Using GitHub to Host a Webpage\r\n\r\nGitHub is the coolest place to find open-source code - it is a repository that lets a number of users collaborate on a project  at the same time, while ensuring that there are no conflicts. The cool thing about GitHub is that it also lets you host your own webpage - if your user account is **debbiediscovers**, your webpage will be **www.debbiediscovers.github.io**. \r\n\r\nThe first thing to do is to go to GitHub and create an account. There are two types of webpages you can create on GitHub.  The first is the User or Organisation page, which is basically like a home page - (create a repository called **www.debbiediscovers.github.io**), and the second is a type of project page, or gh-pages, (create a repository which can be called whatever you like e.g. Blog or Website or Your Cat's Name)\r\n\r\n###The Easy Way\r\n\r\nYou can *cheat* by  using GitHub's automatic page generator, that allows you to makes beautiful, designer webpages with one click. After creating you repository, click on Settings (lower left corner) and you will see the automatic page generator function. Simply follow the instructions to create a gorgeous webpage. *Note that GitHub uses Markdown, which is similar to html but much simpler.*\r\n\r\n##The Half Coding Way\r\n\r\nTo use a couple of built-in shortcuts, first download Git for Mac. Then create a repository (select public and initialise it by creating a README file).  Go to the bottom left, and click on Clone on desktop. \r\n\r\n##The Hard-Core Coders Way\r\n\r\nYou will need to use Terminal for this, but it's not actually that hard. There are only 5 or 6 Git commands to remember, and after a few tries, you will get the hang of it. After creating your user repository, clone the directory in your desktop.  To do this, click on the https://github.debbiediscovers/debbiediscovers.github.io link on the lower right hand side of the web page. Go back to terminal and use the command:\r\n\r\n```\r\ngit clone https://github.debbiediscovers/debbiediscovers.github.io\r\n```\r\n\r\nThis will create a directory in your hard drive.  You then want to create an index.html file for your web page. You can either create it via a text editor like notepad or text wrangler and drop the file in the Github folder that you just created, or you can use the terminal commands touch index.html to create the file and then vim or nano index.html to edit it.\r\n\r\n```\r\n$ touch index.html\r\n$ vim index.html\r\n```\r\nIf in Vim, create the HTML document and use bootstrap CDN's ready made styling sheets by adding the stylesheets in your header, and the script at the bottom of the body.\r\n\r\n```\r\n<!DOCTYPE html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title> DEBBIE DISCOVERS GITHUB </title>\r\n  <!-- Add some style to your site, see http://getbootstrap.com for details -->\r\n  <!-- Latest compiled and minified CSS --\r\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css\">\r\n  <!-- Optional theme -->\r\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css\">\r\n</head>\r\n\r\n<title> DEBBIE DISCOVERS GITHUB </title>\r\n<html>\r\n<body>\r\n<h1> Debbie Discovers Github </h1>\r\n<h2> Github Geekspeak makes a Website Chic </h2>\r\n\r\n  <!-- Latest compiled and minified JavaScript -->\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js\"></script>\r\n</body>\r\n</html>\r\n```\r\nIf you do it this way, you'll have to add your own styling. \r\nThen you need to add, commit and push the files onto Github. \r\n\r\n```\r\ngit add .\r\ngit commit -m \"Initial commit\"\r\ngit push -u origin master\r\n```\r\n\r\nAnd there you go! \r\n\r\nIn order to change the URL to your custom domain, create a CNAME file with the custom domain (without the www) as text.  Add,  commit, push. \r\n\r\nWait for 30 minutes and you will have your very own webpage hosted on Git, beautifully styled. \r\n\r\n If you use gh-pages instead of your User repository, check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nEnjoy!\r\n\r\nDebbie","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}